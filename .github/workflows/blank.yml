# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          Invoke-WebRequest -Uri https://download.qt.io/official_releases/qt/5.15/5.15.11/single/qt-everywhere-opensource-src-5.15.11.zip -OutFile qt_src_5.15.11.zip
          Expand-Archive -Path qt_src_5.15.11.zip -DestinationPath .
          mkdir build_win64_msvc2019_shared
          mkdir win64_msvc2019_shared
          cd build_win64_msvc2019_shared
          ..\qt-everywhere-src-5.15.11\configure.bat -shared -prefix "..\win64_msvc2019_shared" -confirm-license -opensource -debug-and-release -platform win32-msvc -qt-zlib -qt-libjpeg -qt-libpng -qt-freetype -qt-pcre -qt-harfbuzz -ssl -openssl-linked -sql-mysql -sql-odbc -sql-sqlite -opengl desktop -mp -silent -nomake examples -nomake tests
          nmake
          nmake install
          
